services:
  pymongo_api:
    container_name: mongo-sharding
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    environment:
      MONGODB_URL: "mongodb://mongodb1"
      MONGODB_DATABASE_NAME: "somedb"

  # mongodb1:
  #   container_name: mongodb1
  #   image: dh-mirror.gitverse.ru/mongo:latest
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongodb1_data_container:/data/db

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    # networks:
    #   app-network:
    #     ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    # networks:
    #   app-network:
    #     ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command: mongod --port 27017
    # command:
    #   [
    #     "--configsvr",
    #     "--replSet",
    #     "config_server",
    #     "--bind_ip_all",
    #     "--port",
    #     "27017"
    #   ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


volumes:
  config-data:
  shard1-data:
  shard2-data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/24
